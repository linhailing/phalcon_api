<?php
/**
 * Created by PhpStorm.
 * User: henry hailing.lin@outlook.com
 * Date: 2018/4/22
 * Time: 19:33
 * 用户管理控制
 */
use repositories\BaseRepository;
use repositories\RedisRepository as redisRepo;
use repositories\UserRepository;

use Firebase\JWT\JWT;

class UserController extends ControllerBase{
    private $actionWhiteList = ['index','show','signin','register','captcha','update','jwt'];
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        //var_dump($this->dispatcher->getActionName());
        if (!in_array($this->dispatcher->getActionName(),$this->actionWhiteList)){
            $this->renderJson([],10012);
        }
        $baseRepo = new BaseRepository();
    }
    public function jwtAction(){
        $privateKey = $this->config->jwt->privateKey;
        $publicKey = $this->config->jwt->publicKey;
        //echo $privateKey;
        $token = array(
            "iss" => "http://example.org",
            "aud" => "http://example.com",
            "iat" => 1356999524,
            "nbf" => 1357000000
        );
        $jwt = JWT::encode($token, $privateKey,'RS256');
        echo "encode:".$jwt."<br>";
        $dejwt = JWT::decode($jwt,$publicKey,['RS256']);
        var_dump($dejwt);
//        $key = JWT::sign('henry',$key, 'RS256');
//        echo $key;

    }
    public function indexAction(){
        //连接本地的 Redis 服务
        $redis = new Redis();
        $redis->connect('127.0.0.1', 6379);
        $redis->auth('henry');
        echo "Connection to server sucessfully";
        //设置 redis 字符串数据
        $redis->set("tutorial-name", "Redis tutorial");
        // 获取存储的数据并输出
        echo "Stored string in redis:: " . $redis->get("tutorial-name");
    }
    public function showAction(){
        //判断是否为get
        if (!$this->request->isGet()) {
            $this->renderJson([],10012);
        }
        $userId = $this->requestData['uid'];
        if ( !$userId ){
            $this->renderJson([],10016);
        }
        $userRepo = new UserRepository();
        $memberInfo = $userRepo->getUserInfo($userId);
        //保存到redis中
        if(!$this->redis->exists(redisRepo::MEMBER_PREFIX.$userId)){
            $this->redis->set(redisRepo::MEMBER_PREFIX.$userId,serialize($memberInfo));
        }
        $this->renderJson($memberInfo);
    }
}